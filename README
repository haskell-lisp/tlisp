To build, use cabal:

$ cabal sandbox init
$ cabal install --only-dependencies --enable-tests
#if you're on a mac, use libeditline instead of libreadline
#$ cabal install -flibeditline --only-dependencies --enable-tests
$ cabal configure --enable-tests
$ cabal build

======
To run:

$ cabal run
tlisp>>> (load "stdlib.scm")
>>>(lambda ("pred" . lst) ...)
tlisp>>> (map (curry + 2) â€™(1 2 3 4))
(3 4 5 6)

=======
Interesting features:

*: native support for integers, rationals, floating point and complex numbers
*: arithmetic operations perform type promotion between the numerical types
*: uses libreadline (or libeditline on a OSX) for the repl

=======
To do:

*: switch to using StateT rather than IORefs for the environment
*: support immutable and mutable lisp values
*: move set! family of functions into another list of EnvPrimitives

=======
End game goals:

*: add macros
*: add continuations

=======
To run the tests:

$ cabal test
Building tlisp-0.1.0.0...
Preprocessing executable 'tlisp' for tlisp-0.1.0.0...
Preprocessing test suite 'doctests' for tlisp-0.1.0.0...
Running 1 test suites...
Test suite doctests: RUNNING...
Test suite doctests: PASS
Test suite logged to: dist/test/tlisp-0.1.0.0-doctests.log
1 of 1 test suites (1 of 1 test cases) passed.

